package sintaxis;
import java_cup.runtime.Symbol;
%%
%class LexerCup

ComentBlo = "/*" ( [^*] | \*+ [^/*] )* "*"+ "/"
%cup

%line
%char
%{
    
    private Symbol symbol(int type, Object value){
        return new Symbol(type, yyline, yycolumn, value);
    }
    private Symbol symbol(int type){
        return new Symbol(type, yyline, yycolumn);
    }
    private Symbol symbol(int type, int yychar1, int yyline1, Object value){
        return new Symbol(type, yyline, yycolumn, value);
    } 
    public int getLine() {
        return yyline+1;
    }

    public int getColumn() {
        return yycolumn+1;
    }       
        
%}
%%

";"                                 { return symbol(sym.ENDLINE, yychar, yyline, yytext()); }
"#"                                 { return symbol(sym.SEPARADOR, yychar, yyline, yytext()); }
"="                                 { return symbol(sym.SIGNOIGUAL, yychar, yyline, yytext()); }
":"                                 { return symbol(sym.DOSPUNTOS, yychar, yyline, yytext()); }
","                                 { return symbol(sym.COMA, yychar, yyline, yytext()); }

"-"                                 { return symbol(sym.SIGRESTA, yychar, yyline, yytext()); }
"+"                                 { return symbol(sym.SIGSUMA, yychar, yyline, yytext()); }
"*"                                 { return symbol(sym.SIGMULTI, yychar, yyline, yytext()); }
"/"                                 { return symbol(sym.SIGDIV, yychar, yyline, yytext()); }
"%"                                 { return symbol(sym.SIGMOD, yychar, yyline, yytext()); }
"^"                                 { return symbol(sym.SIGPOT, yychar, yyline, yytext()); }

"&"                                 { return symbol(sym.SIGCONJUNCION, yychar, yyline, yytext()); }
"|"                                 { return symbol(sym.SIGDISYUNCION, yychar, yyline, yytext()); }
"!"                                 { return symbol(sym.SIGNEGACION, yychar, yyline, yytext()); }

"++"                                { return symbol(sym.SIGAUMEN, yychar, yyline, yytext()); }
"--"                                { return symbol(sym.SIGDIMINU, yychar, yyline, yytext()); }

"<"                                 { return symbol(sym.SIGMENOR, yychar, yyline, yytext()); }
"<="                                { return symbol(sym.SIGMENORIGUAL, yychar, yyline, yytext()); }
">"                                 { return symbol(sym.SIGMAYOR, yychar, yyline, yytext()); }
">="                                { return symbol(sym.SIGMAYORIGUAL, yychar, yyline, yytext()); }
"=="                                { return symbol(sym.IGUAL, yychar, yyline, yytext()); }
"!="                                { return symbol(sym.SIGDIFERENTE, yychar, yyline, yytext()); }

"("                                 { return symbol(sym.SIGABREPARENT, yychar, yyline, yytext()); }
")"                                 { return symbol(sym.SIGCIERRAPARENT, yychar, yyline, yytext()); }
"{"                                 { return symbol(sym.SIGABRELLAVES, yychar, yyline, yytext()); }
"}"                                 { return symbol(sym.SIGCIERRALLAVES, yychar, yyline, yytext()); }

"read"                              { return symbol(sym.RESERVLEER, yychar, yyline, yytext()); }
"write"                             { return symbol(sym.RESERVESCRIBIR, yychar, yyline, yytext()); }
"if"                                { return symbol(sym.RESERVIF, yychar, yyline, yytext()); }
"else"                              { return symbol(sym.RESERVELSE, yychar, yyline, yytext()); }
"switch"                            { return symbol(sym.RESERVSWITCH, yychar, yyline, yytext()); }
"while"                             { return symbol(sym.RESERVWHILE, yychar, yyline, yytext()); }
"forRange"                          { return symbol(sym.RESERVFORRANGE, yychar, yyline, yytext()); }
"main"                              { return symbol(sym.RESERVMAIN, yychar, yyline, yytext()); }
"break"                             { return symbol(sym.RESERVBREAK, yychar, yyline, yytext()); }
"return"                            { return symbol(sym.RESERVRETURN, yychar, yyline, yytext()); }
"case"                              { return symbol(sym.RESERVCASE, yychar, yyline, yytext()); }

"True"                              { return symbol(sym.LITTRUE, yychar, yyline, yytext()); }
"False"                             { return symbol(sym.LITFALSE, yychar, yyline, yytext()); }

"int"                               { return symbol(sym.TIPOINT, yychar, yyline, yytext()); }
"float"                             { return symbol(sym.TIPOFLOAT, yychar, yyline, yytext()); }
"bool"                              { return symbol(sym.TIPOBOOL, yychar, yyline, yytext()); }
"char"                              { return symbol(sym.TIPOCHAR, yychar, yyline, yytext()); }
"string"                            { return symbol(sym.TIPOSTRING, yychar, yyline, yytext()); }
"default"                           { return symbol(sym.RESERVDEFAULT, yychar, yyline, yytext()); }
(-?[1-9][0-9]*) | 0                 { return symbol(sym.LITINT, yychar, yyline, yytext()); }
-?(([1-9][0-9]*)|0)"."[0-9][1-9]*   { return symbol(sym.LITFLOAT, yychar, yyline, yytext()); }
[a-zA-Z][a-zA-Z0-9\_]*              { return symbol(sym.IDENTIFICADOR, yychar, yyline, yytext()); }
\'[^']\'                            { return symbol(sym.LITCHAR, yychar, yyline, yytext()); }
"//".*                              { return symbol(sym.COMENTARIOSIMPLE, yychar, yyline, yytext()); }
{ComentBlo}                         { return symbol(sym.COMENTARIOMULTIPLE, yychar, yyline, yytext()); }


.                                   { return symbol(sym.error, yychar, yyline, yytext()); }