package sintaxis;

import java_cup.runtime.Symbol;
import java.util.List;
import java.util.HashMap;
import java.util.Map;
import java.util.ArrayList;

//class Myparsec
action code {:

    HashMap<String, ArrayList<String>> listaTablasSimbolos = new HashMap<String, ArrayList<String>>();
    String currentHash;

    StringBuffer cod3D = new StringBuffer();
    int currentTemp = 1;

    public void imprimirTablaSimbolos(){
        for (String key : listaTablasSimbolos.keySet()){
            System.out.println("Tabla de simbolo: "+ key);
            System.out.println("Valores: ");
            for (String item : listaTablasSimbolos.get(key)){
                 System.out.println(item);
            }
            System.out.println("");
        }
    }

    public void imprimirCod3D() {
        System.out.println(cod3D.toString());
    }

    public String obtenerCod3D() {
        return cod3D.toString();
    }

    public String determinarTipo(String valor) {
        return null;
    }
:}

// Sección para el código del parser

parser code
{:
    private Symbol s;

    // Método que se invoca cuando ocurre un error de sintaxis
    public void syntax_error(Symbol s){
        if (s == null) {
            System.err.println("El objeto Symbol proporcionado es nulo.");
            return;
        }
        this.s = s;
        System.err.println("Error de sintaxis en la línea " + s.left + ", columna " + s.right + ": se encontró " + s.value);
    }

    // Devuelve el símbolo actual
    public Symbol getS(){
        return this.s;
    }
:};

//------------------------------------------------------------------------------------------------

terminal        ENDLINE,SEPARADOR,DOSPUNTOS,COMA,SIGNOIGUAL,SIGRESTA,SIGSUMA,SIGMULTI,SIGDIV,SIGMOD,SIGPOT,
                SIGCONJUNCION,SIGDISYUNCION,SIGNEGACION,SIGAUMEN,SIGDIMINU,SIGMENOR,SIGMENORIGUAL,SIGMAYOR,SIGMAYORIGUAL,IGUAL,SIGDIFERENTE,SIGABREPARENT,
                SIGCIERRAPARENT,SIGABRELLAVES,SIGCIERRALLAVES,LITTRUE,LITFALSE,TIPOINT,TIPOFLOAT,TIPOBOOL,TIPOCHAR,TIPOSTRING,RESERVLEER,
                RESERVESCRIBIR,RESERVIF,RESERVELSE,RESERVSWITCH,RESERVWHILE,RESERVFORRANGE,RESERVMAIN,RESERVBREAK,RESERVRETURN,
                RESERVCASE,RESERVDEFAULT,LITINT,LITFLOAT,LITCHAR,LITSTRING,IDENTIFICADOR,COMENTARIOSIMPLE,COMENTARIOMULTIPLE;

non terminal    LITBOOL,OPERADORESARITME,OPERADORESLOGICOS,OPERADORESUNARIOS,OPERADORESRELA,COMENTARIOS,DATOSRETORNO,                
                SENTRETURN,SENTBREAK,OPERAUNARIA,OPERACIONUNARIA,VALORESARIT,OPERACIONARIT,ASIGNVAR,CREAVARINT,CREAASIGVARINT,                
                VARIABLESINT,CREAVARFLOAT,CREAASIGVARFLOAT,VARIABLESFLOAT,VALORESBOOL,       PARAMETROFUNCION,      FINIF, INICIOIF,   
                CREAVARBOOL,CREAASIGVARBOOL,VARIABLESBOOL,VALORESCHAR,CREAVARCHAR,CREAASIGVARCHAR,VARIABLESCHAR,                
                VALORESSTRING,CREAVARSTRING,CREAASIGVARSTRING,VARIABLESSTRING,VARIABLES,FUNCLEER,FUNCESCRIBIRINT,                
                FUNCESCRIBIRFLOAT,FUNCESCRIBIRSTRING,FUNCESCRIBIRID,FUNCESCRIBIR,OPERADORESBOOL,OPERANDOBOOLEANO,OPERACIONBOOL,
                OPERACIONRELAARIT,OPERANDOSLOGICOS,OPERACIONLOGICAS,CONDICIONES,SENTENCIA,ESTRUCTCONTROL,VALORESBLOQUECODIGO,                
                BLOQUECODIGO,ESTRUCTELSE,ESTRUCTIF,PARAMFORRANGEUNO,PARAMFORRANGEDOS,PARAMFORRANGETRES,PARAMFORRANGE,ESTRUCTFORRANGE,                
                ESTRUCTWHILE,LITERAL,CASE,CASES,DEFAULT,ESTRUCTSWITCH,TIPOSPARAM,PARAMFUNCIONES,FUNCMAIN,CREAFUNC,                
                PARMFUNC,PARAMLLAMARFUNC,PARAMLLAMAFUNC,LLAMARFUNC,SENTLLAMARFUNC,GLOBALVAR,VALORPROGRAMA,VALORESPROGRAMA,PROGRAMA,INICIO,VALORESCONDI,INIFUNMAIN;

precedence left TIPOINT , TIPOFLOAT , TIPOBOOL , TIPOCHAR ;
precedence left SIGCONJUNCION, SIGDISYUNCION;

start with INICIO;

LITBOOL             ::= LITTRUE {: RESULT = "true"+": "+"bool"; :}
                        | LITFALSE {: RESULT = "false"+": "+"bool"; :};

OPERADORESARITME    ::= SIGRESTA {: RESULT = "-";:} 
                        | SIGSUMA {: RESULT = "+";:} 
                        | SIGMULTI {: RESULT = "*";:} 
                        | SIGDIV {: RESULT = "/";:} 
                        | SIGMOD {: RESULT = "%";:} 
                        | SIGPOT{: RESULT = "^";:};

OPERADORESLOGICOS   ::= SIGCONJUNCION {: RESULT = "&";:} 
                        | SIGDISYUNCION{: RESULT = "|";:};

OPERADORESUNARIOS   ::= SIGAUMEN {: RESULT = "++";:} 
                        | SIGDIMINU {: RESULT = "--";:};

COMENTARIOS         ::= COMENTARIOSIMPLE | COMENTARIOMULTIPLE;

DATOSRETORNO        ::= LITINT:litInt {: RESULT = litInt.toString()+": "+"int"; :}
                        | LITFLOAT:litfloat {: RESULT = litfloat.toString()+": "+"float"; :} 
                        | LITBOOL 
                        | IDENTIFICADOR 
                        | LLAMARFUNC ;
SENTRETURN          ::= RESERVRETURN SEPARADOR DATOSRETORNO ENDLINE;

OPERAUNARIA         ::= IDENTIFICADOR OPERADORESUNARIOS;
OPERAUNARIA         ::= OPERADORESUNARIOS IDENTIFICADOR ;
OPERACIONUNARIA     ::= OPERAUNARIA ENDLINE;

VALORESARIT         ::= LITINT:litInt {: RESULT = litInt.toString()+": "+"int"; :}
                        | LITFLOAT:litfloat {: RESULT = litfloat.toString()+": "+"float"; :}
                        | IDENTIFICADOR : id {: RESULT = id; :} 
                        | LLAMARFUNC 
                        | OPERAUNARIA;                        
OPERACIONARIT       ::= VALORESARIT
                        | VALORESARIT OPERADORESARITME OPERACIONARIT
                        | SIGABREPARENT OPERACIONARIT SIGCIERRAPARENT;

ASIGNVAR            ::= IDENTIFICADOR SIGNOIGUAL OPERACIONARIT ENDLINE;
CREAVARINT          ::= TIPOINT SEPARADOR IDENTIFICADOR ENDLINE;
CREAASIGVARINT      ::= TIPOINT SEPARADOR IDENTIFICADOR SIGNOIGUAL OPERACIONARIT ENDLINE;
VARIABLESINT        ::= ASIGNVAR 
                        | CREAVARINT 
                        | CREAASIGVARINT;

CREAVARFLOAT        ::= TIPOFLOAT SEPARADOR IDENTIFICADOR ENDLINE;
CREAASIGVARFLOAT    ::= TIPOFLOAT SEPARADOR IDENTIFICADOR SIGNOIGUAL OPERACIONARIT ENDLINE;
VARIABLESFLOAT      ::= CREAVARFLOAT 
                        | CREAASIGVARFLOAT;

VALORESBOOL         ::= LITBOOL  
                        | IDENTIFICADOR  
                        | SIGABREPARENT OPERACIONRELAARIT SIGCIERRAPARENT  
                        | OPERACIONBOOL;
CREAVARBOOL         ::= TIPOBOOL SEPARADOR IDENTIFICADOR ENDLINE;
CREAASIGVARBOOL     ::= TIPOBOOL SEPARADOR IDENTIFICADOR SIGNOIGUAL VALORESBOOL ENDLINE 
                        | TIPOBOOL SEPARADOR IDENTIFICADOR SIGNOIGUAL SIGNEGACION VALORESBOOL ENDLINE;
VARIABLESBOOL       ::= CREAVARBOOL 
                        | CREAASIGVARBOOL;

VALORESCHAR         ::= LITCHAR 
                        | IDENTIFICADOR;
CREAVARCHAR         ::= TIPOCHAR SEPARADOR IDENTIFICADOR ENDLINE;
CREAASIGVARCHAR     ::= TIPOCHAR SEPARADOR IDENTIFICADOR SIGNOIGUAL VALORESCHAR ENDLINE;
VARIABLESCHAR       ::= CREAVARCHAR 
                        | CREAASIGVARCHAR;

VALORESSTRING       ::= LITSTRING 
                        | IDENTIFICADOR;
CREAVARSTRING       ::= TIPOSTRING SEPARADOR IDENTIFICADOR ENDLINE;
CREAASIGVARSTRING   ::= TIPOSTRING SEPARADOR IDENTIFICADOR SIGNOIGUAL VALORESSTRING ENDLINE;
VARIABLESSTRING     ::= CREAVARSTRING 
                        | CREAASIGVARSTRING;

VARIABLES           ::= VARIABLESINT 
                        | VARIABLESFLOAT 
                        | VARIABLESBOOL 
                        | VARIABLESCHAR 
                        | VARIABLESSTRING 
                        | OPERACIONUNARIA;

FUNCLEER            ::= RESERVLEER SIGABREPARENT IDENTIFICADOR SIGCIERRAPARENT ENDLINE;

FUNCESCRIBIRINT     ::= RESERVESCRIBIR SIGABREPARENT LITINT SIGCIERRAPARENT ENDLINE;
FUNCESCRIBIRFLOAT   ::= RESERVESCRIBIR SIGABREPARENT LITFLOAT SIGCIERRAPARENT ENDLINE;
FUNCESCRIBIRSTRING  ::= RESERVESCRIBIR SIGABREPARENT LITSTRING SIGCIERRAPARENT ENDLINE;
FUNCESCRIBIRID      ::= RESERVESCRIBIR SIGABREPARENT IDENTIFICADOR SIGCIERRAPARENT ENDLINE;
FUNCESCRIBIR        ::= FUNCESCRIBIRINT 
                        | FUNCESCRIBIRFLOAT 
                        | FUNCESCRIBIRSTRING 
                        | FUNCESCRIBIRID;

OPERADORESBOOL      ::= IGUAL 
                        | SIGDIFERENTE;
OPERANDOBOOLEANO    ::= LITBOOL 
                        | IDENTIFICADOR;
OPERACIONBOOL       ::= OPERANDOBOOLEANO OPERADORESBOOL OPERANDOBOOLEANO;


OPERADORESRELA      ::= SIGMENOR 
                        | SIGMENORIGUAL 
                        | SIGMAYOR 
                        | SIGMAYORIGUAL 
                        | OPERADORESBOOL ;


OPERACIONRELAARIT    ::= VALORESARIT;
OPERACIONRELAARIT    ::= VALORESARIT OPERADORESRELA VALORESARIT;

OPERANDOSLOGICOS    ::=  LITBOOL
                        | SIGABREPARENT OPERACIONRELAARIT SIGCIERRAPARENT;
OPERACIONLOGICAS    ::= OPERANDOSLOGICOS;
OPERACIONLOGICAS    ::= SIGNEGACION OPERANDOSLOGICOS;
OPERACIONLOGICAS    ::= OPERACIONLOGICAS OPERADORESLOGICOS OPERANDOSLOGICOS;
OPERACIONLOGICAS    ::= SIGABREPARENT OPERACIONLOGICAS SIGCIERRAPARENT;


VALORESCONDI        ::= OPERACIONLOGICAS;
CONDICIONES         ::= SIGABREPARENT VALORESCONDI SIGCIERRAPARENT;

SENTENCIA           ::= VARIABLES 
                        | FUNCLEER 
                        | FUNCESCRIBIR ;
ESTRUCTCONTROL      ::= ESTRUCTIF 
                        | ESTRUCTSWITCH 
                        | ESTRUCTFORRANGE 
                        | ESTRUCTWHILE;
VALORESBLOQUECODIGO ::= SENTENCIA 
                        | ESTRUCTCONTROL 
                        | RESERVBREAK ENDLINE 
                        | SENTRETURN 
                        | SENTLLAMARFUNC;
BLOQUECODIGO        ::= VALORESBLOQUECODIGO BLOQUECODIGO
                        | VALORESBLOQUECODIGO 
                        | COMENTARIOS;

ESTRUCTELSE         ::= RESERVELSE SIGABRELLAVES BLOQUECODIGO SIGCIERRALLAVES;
ESTRUCTIF           ::= INICIOIF RESERVIF CONDICIONES SIGABRELLAVES BLOQUECODIGO SIGCIERRALLAVES ESTRUCTELSE FINIF
                        | INICIOIF RESERVIF CONDICIONES SIGABRELLAVES BLOQUECODIGO SIGCIERRALLAVES FINIF;
INICIOIF            ::= {:  String temp = "t" + (currentTemp++);                    
                            cod3D.append("\n" + temp + "_start:");
                        :};

FINIF ::= {:    /*codIn3D.append("\n_end_if_"+(contador_if)+":");*/ :} ;

PARAMFORRANGEUNO    ::= LITINT:litInt {: RESULT = litInt.toString()+": "+"int"; :};
PARAMFORRANGEDOS    ::= LITINT:parm1 ENDLINE LITINT:parm2 {: RESULT = parm1.toString()+": "+"paramInicia" + parm2.toString()+": "+"paramFinaliza"; :};
PARAMFORRANGETRES   ::= LITINT:parm1 ENDLINE LITINT:parm2 ENDLINE LITINT:parm3 {: RESULT = parm1.toString()+": "+"paramInicia" + parm2.toString()+": "+"paramIncremento" + parm3.toString()+": "+"paramFinaliza"; :};
PARAMFORRANGE       ::= PARAMFORRANGEUNO 
                        | PARAMFORRANGEDOS 
                        | PARAMFORRANGETRES;
ESTRUCTFORRANGE     ::= RESERVFORRANGE SIGABREPARENT PARAMFORRANGE SIGCIERRAPARENT SIGABRELLAVES BLOQUECODIGO SIGCIERRALLAVES;

ESTRUCTWHILE        ::= RESERVWHILE CONDICIONES SIGABRELLAVES BLOQUECODIGO SIGCIERRALLAVES 
                        | RESERVWHILE CONDICIONES SIGABRELLAVES BLOQUECODIGO SIGCIERRALLAVES ESTRUCTELSE;

LITERAL             ::= LITINT:litInt {: RESULT = litInt.toString()+": "+"int"; :}
                        | LITFLOAT:litfloat {: RESULT = litfloat.toString()+": "+"float"; :}
                        | LITCHAR:litchar {: RESULT = litchar+": "+"char"; :}
                        | LITSTRING:litstring {: RESULT = litstring+": "+"string"; :};

CASE                ::= RESERVCASE SEPARADOR LITERAL DOSPUNTOS BLOQUECODIGO SENTBREAK;
CASES               ::= CASE | CASE CASES;
DEFAULT             ::= RESERVDEFAULT DOSPUNTOS BLOQUECODIGO SENTBREAK;
ESTRUCTSWITCH       ::= RESERVSWITCH SIGABREPARENT IDENTIFICADOR SIGCIERRAPARENT SIGABRELLAVES CASES DEFAULT SIGCIERRALLAVES;

TIPOSPARAM          ::= TIPOINT {: RESULT = "int";:} 
                        | TIPOFLOAT {: RESULT = "float";:} 
                        | TIPOBOOL {: RESULT = "boole";:}
                        | TIPOCHAR {: RESULT = "char";:};
PARMFUNC            ::= TIPOSPARAM:tip SEPARADOR IDENTIFICADOR:id ;
                        
PARAMETROFUNCION    ::= PARMFUNC
                        | PARMFUNC COMA PARAMETROFUNCION;
PARAMFUNCIONES      ::= SIGABREPARENT PARAMETROFUNCION SIGCIERRAPARENT
                        | SIGABREPARENT SIGCIERRAPARENT;
FUNCMAIN            ::=  INIFUNMAIN PARAMFUNCIONES SIGABRELLAVES BLOQUECODIGO SIGCIERRALLAVES;

INIFUNMAIN             ::=TIPOINT:tip SEPARADOR RESERVMAIN:id;

PARAMLLAMARFUNC     ::= LITINT | LITFLOAT | LITCHAR | LITBOOL | IDENTIFICADOR | LLAMARFUNC;
PARAMLLAMAFUNC      ::= PARAMLLAMARFUNC | PARAMLLAMARFUNC COMA PARAMLLAMAFUNC;
LLAMARFUNC          ::= IDENTIFICADOR SIGABREPARENT PARAMLLAMAFUNC SIGCIERRAPARENT ; 
LLAMARFUNC          ::= IDENTIFICADOR SIGABREPARENT SIGCIERRAPARENT ;
SENTLLAMARFUNC      ::= LLAMARFUNC ENDLINE;

GLOBALVAR           ::= CREAVARINT 
                        | CREAASIGVARINT 
                        | CREAVARFLOAT 
                        | CREAASIGVARFLOAT 
                        | CREAVARBOOL 
                        | CREAASIGVARBOOL 
                        | CREAVARCHAR 
                        | CREAASIGVARCHAR 
                        | CREAVARSTRING 
                        | CREAASIGVARSTRING;
VALORPROGRAMA       ::= CREAFUNC 
                        | GLOBALVAR 
                        | COMENTARIOS;
VALORESPROGRAMA     ::= VALORPROGRAMA VALORESPROGRAMA;
PROGRAMA            ::= FUNCMAIN
                        | FUNCMAIN VALORESPROGRAMA
                        | VALORESPROGRAMA FUNCMAIN
                        | VALORESPROGRAMA FUNCMAIN
                        VALORESPROGRAMA;

INICIO              ::= PROGRAMA;
